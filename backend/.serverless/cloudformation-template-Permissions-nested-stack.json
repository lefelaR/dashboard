{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "PermissionsNestedStack nested stack",
  "Parameters": {
    "UnresolvedIssueEventsRuleSchedule1ArnParameter": {
      "Type": "String"
    },
    "UnresolvedIssueLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "AdminNewIssueReminderEventsRuleSchedule1ArnParameter": {
      "Type": "String"
    },
    "AdminNewIssueReminderLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "DailyUnresolvedIssueReminderEventsRuleSchedule1ArnParameter": {
      "Type": "String"
    },
    "DailyUnresolvedIssueReminderLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "OverDuePendingIssuesReminderEventsRuleSchedule1ArnParameter": {
      "Type": "String"
    },
    "OverDuePendingIssuesReminderLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "UnverifiedPropertiesReminderEventsRuleSchedule1ArnParameter": {
      "Type": "String"
    },
    "UnverifiedPropertiesReminderLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "VerificationResetEventsRuleSchedule1ArnParameter": {
      "Type": "String"
    },
    "VerificationResetLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "ApiGatewayRestApiParameter": {
      "Type": "String"
    },
    "GetAllConfigurationsLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "CreateIssueLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetAllIssuesLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetIssueLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "UpdateIssueLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "DeleteIssueLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetUserIssuesLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "CreateIssueCommentLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "AddAssigneeLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "ChangeIssueStatusLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetIssueCommentsLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetIssueByReferenceLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "AddIssueJobReferenceLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "CreateCategoryLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "UpdateCategoryLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "DeleteCategoryLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetCategoryLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetAllCategoriesLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "CreateDepartmentLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "UpdateDepartmentLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "DeleteDepartmentLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetDepartmentLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetAllDepartmentsLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "CreateRoleLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "UpdateRoleLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "DeleteRoleLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetRoleLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetAllRolesLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "AdduserLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetAllUsersLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetUserLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "UpdateUserLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "CreatePropertyLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "UpdatePropertyLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "DeletePropertyLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetPropertyLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetAllPropertiesLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "UpdateBuildingDetailsLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "UpdateLevyDetailsLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "UpdateOwerDetailsLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetUnverifiedPropertiesLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "FlagPropertyLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetAllNewslettersLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "PostNewsletterLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "DeleteNewsletterLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "EditNewsletterLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetArticleLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "RateNewsletterLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "AddRSVPLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetAllRSVPLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetRSVPLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "CreateInteractionLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetAllInteractionsLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetInteractionLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetUserInteractionsLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetPropertyInteractionsLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "DeleteInteractionLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "UpdateInteractionLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "ZapierInteractionLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetAGMDocumentsLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "UploadAGMDocumentsLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "AddSubscriberLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetAllMembersLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "NotifyIssueCreatedLambdaFunctionParameter": {
      "Type": "String"
    },
    "NotifyIssueUpdatedLambdaFunctionParameter": {
      "Type": "String"
    },
    "NotifyIssueCommentOnLambdaFunctionParameter": {
      "Type": "String"
    },
    "OnAssigneeAddedNotifyAssigneeLambdaFunctionParameter": {
      "Type": "String"
    },
    "IssueStatusChangedLambdaFunctionParameter": {
      "Type": "String"
    },
    "OnPropertyFlaggedLambdaFunctionParameter": {
      "Type": "String"
    },
    "NotifyAdminAboutNewSubscriberLambdaFunctionParameter": {
      "Type": "String"
    },
    "UpdateLastInteractionLambdaFunctionParameter": {
      "Type": "String"
    }
  },
  "Resources": {
    "AddAssigneeLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "AddAssigneeLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "AddIssueJobReferenceLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "AddIssueJobReferenceLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "AddRSVPLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "AddRSVPLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "AddSubscriberLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "AddSubscriberLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "AdduserLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "AdduserLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "AdminNewIssueReminderLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "AdminNewIssueReminderLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Ref": "AdminNewIssueReminderEventsRuleSchedule1ArnParameter"
        }
      },
      "DependsOn": []
    },
    "ChangeIssueStatusLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "ChangeIssueStatusLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "CreateCategoryLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateCategoryLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "CreateDepartmentLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateDepartmentLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "CreateInteractionLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateInteractionLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "CreateIssueCommentLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateIssueCommentLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "CreateIssueLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateIssueLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "CreatePropertyLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "CreatePropertyLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "CreateRoleLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateRoleLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "DailyUnresolvedIssueReminderLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "DailyUnresolvedIssueReminderLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Ref": "DailyUnresolvedIssueReminderEventsRuleSchedule1ArnParameter"
        }
      },
      "DependsOn": []
    },
    "DeleteCategoryLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteCategoryLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "DeleteDepartmentLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteDepartmentLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "DeleteInteractionLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteInteractionLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "DeleteIssueLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteIssueLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "DeleteNewsletterLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteNewsletterLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "DeletePropertyLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "DeletePropertyLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "DeleteRoleLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteRoleLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "EditNewsletterLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "EditNewsletterLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "FlagPropertyLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "FlagPropertyLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetAGMDocumentsLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAGMDocumentsLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetAllCategoriesLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAllCategoriesLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetAllConfigurationsLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAllConfigurationsLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetAllDepartmentsLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAllDepartmentsLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetAllInteractionsLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAllInteractionsLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetAllIssuesLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAllIssuesLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetAllMembersLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAllMembersLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetAllNewslettersLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAllNewslettersLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetAllPropertiesLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAllPropertiesLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetAllRSVPLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAllRSVPLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetAllRolesLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAllRolesLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetAllUsersLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAllUsersLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetArticleLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetArticleLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetCategoryLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetCategoryLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetDepartmentLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetDepartmentLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetInteractionLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetInteractionLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetIssueByReferenceLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetIssueByReferenceLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetIssueCommentsLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetIssueCommentsLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetIssueLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetIssueLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetPropertyInteractionsLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetPropertyInteractionsLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetPropertyLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetPropertyLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetRSVPLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetRSVPLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetRoleLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetRoleLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetUnverifiedPropertiesLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetUnverifiedPropertiesLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetUserInteractionsLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetUserInteractionsLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetUserIssuesLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetUserIssuesLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetUserLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetUserLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "IssueStatusChangedEventBridgeLambdaPermission1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "IssueStatusChangedLambdaFunctionParameter"
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            ":",
            [
              "arn",
              {
                "Ref": "AWS::Partition"
              },
              "events",
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AWS::AccountId"
              },
              {
                "Fn::Join": [
                  "/",
                  [
                    "rule",
                    "notifications",
                    "wynberg-manage-my-area-prod-issueStatusChanged-rule-1"
                  ]
                ]
              }
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "NotifyAdminAboutNewSubscriberEventBridgeLambdaPermission1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "NotifyAdminAboutNewSubscriberLambdaFunctionParameter"
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            ":",
            [
              "arn",
              {
                "Ref": "AWS::Partition"
              },
              "events",
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AWS::AccountId"
              },
              {
                "Fn::Join": [
                  "/",
                  [
                    "rule",
                    "notifications",
                    "wynberg-manage-my-area-prod-notifyAdminAboutNewSubscriber-rule-1"
                  ]
                ]
              }
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "NotifyIssueCommentOnEventBridgeLambdaPermission1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "NotifyIssueCommentOnLambdaFunctionParameter"
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            ":",
            [
              "arn",
              {
                "Ref": "AWS::Partition"
              },
              "events",
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AWS::AccountId"
              },
              {
                "Fn::Join": [
                  "/",
                  [
                    "rule",
                    "notifications",
                    "wynberg-manage-my-area-prod-notifyIssueCommentOn-rule-1"
                  ]
                ]
              }
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "NotifyIssueCreatedEventBridgeLambdaPermission1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "NotifyIssueCreatedLambdaFunctionParameter"
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            ":",
            [
              "arn",
              {
                "Ref": "AWS::Partition"
              },
              "events",
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AWS::AccountId"
              },
              {
                "Fn::Join": [
                  "/",
                  [
                    "rule",
                    "notifications",
                    "wynberg-manage-my-area-prod-notifyIssueCreated-rule-1"
                  ]
                ]
              }
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "NotifyIssueUpdatedEventBridgeLambdaPermission1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "NotifyIssueUpdatedLambdaFunctionParameter"
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            ":",
            [
              "arn",
              {
                "Ref": "AWS::Partition"
              },
              "events",
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AWS::AccountId"
              },
              {
                "Fn::Join": [
                  "/",
                  [
                    "rule",
                    "notifications",
                    "wynberg-manage-my-area-prod-notifyIssueUpdated-rule-1"
                  ]
                ]
              }
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "OnAssigneeAddedNotifyAssigneeEventBridgeLambdaPermission1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "OnAssigneeAddedNotifyAssigneeLambdaFunctionParameter"
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            ":",
            [
              "arn",
              {
                "Ref": "AWS::Partition"
              },
              "events",
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AWS::AccountId"
              },
              {
                "Fn::Join": [
                  "/",
                  [
                    "rule",
                    "notifications",
                    "wynberg-manage-my-area-prod-onAssigneeAddedNotifyAssignee-rule-1"
                  ]
                ]
              }
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "OnPropertyFlaggedEventBridgeLambdaPermission1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "OnPropertyFlaggedLambdaFunctionParameter"
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            ":",
            [
              "arn",
              {
                "Ref": "AWS::Partition"
              },
              "events",
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AWS::AccountId"
              },
              {
                "Fn::Join": [
                  "/",
                  [
                    "rule",
                    "notifications",
                    "wynberg-manage-my-area-prod-OnPropertyFlagged-rule-1"
                  ]
                ]
              }
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "OverDuePendingIssuesReminderLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "OverDuePendingIssuesReminderLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Ref": "OverDuePendingIssuesReminderEventsRuleSchedule1ArnParameter"
        }
      },
      "DependsOn": []
    },
    "PostNewsletterLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "PostNewsletterLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "RateNewsletterLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "RateNewsletterLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "UnresolvedIssueLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "UnresolvedIssueLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Ref": "UnresolvedIssueEventsRuleSchedule1ArnParameter"
        }
      },
      "DependsOn": []
    },
    "UnverifiedPropertiesReminderLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "UnverifiedPropertiesReminderLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "UnverifiedPropertiesReminderLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "UnverifiedPropertiesReminderLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Ref": "UnverifiedPropertiesReminderEventsRuleSchedule1ArnParameter"
        }
      },
      "DependsOn": []
    },
    "UpdateBuildingDetailsLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateBuildingDetailsLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "UpdateCategoryLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateCategoryLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "UpdateDepartmentLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateDepartmentLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "UpdateInteractionLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateInteractionLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "UpdateIssueLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateIssueLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "UpdateLastInteractionEventBridgeLambdaPermission1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "UpdateLastInteractionLambdaFunctionParameter"
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            ":",
            [
              "arn",
              {
                "Ref": "AWS::Partition"
              },
              "events",
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AWS::AccountId"
              },
              {
                "Fn::Join": [
                  "/",
                  [
                    "rule",
                    "notifications",
                    "wynberg-manage-my-area-prod-updateLastInteraction-rule-1"
                  ]
                ]
              }
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "UpdateLevyDetailsLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateLevyDetailsLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "UpdateOwerDetailsLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateOwerDetailsLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "UpdatePropertyLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdatePropertyLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "UpdateRoleLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateRoleLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "UpdateUserLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateUserLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "UploadAGMDocumentsLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "UploadAGMDocumentsLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "VerificationResetLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "VerificationResetLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "VerificationResetLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "VerificationResetLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Ref": "VerificationResetEventsRuleSchedule1ArnParameter"
        }
      },
      "DependsOn": []
    },
    "ZapierInteractionLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "ZapierInteractionLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    }
  },
  "Outputs": {}
}
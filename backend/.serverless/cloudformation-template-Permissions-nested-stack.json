{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "PermissionsNestedStack nested stack",
  "Parameters": {
    "ApiGatewayRestApiParameter": {
      "Type": "String"
    },
    "CreateRoleLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "UpdateRoleLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "DeleteRoleLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetRoleLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetAllRolesLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "AdduserLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetAllUsersLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetUserLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "UpdateUserLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetAllNewslettersLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "PostNewsletterLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "DeleteNewsletterLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "EditNewsletterLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetArticleLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "RateNewsletterLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "AddSubscriberLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetAllMembersLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "AddItemLambdaFunctionArnParameter": {
      "Type": "String"
    },
    "GetAllItemsLambdaFunctionArnParameter": {
      "Type": "String"
    }
  },
  "Resources": {
    "AddSubscriberLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "AddSubscriberLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "AdduserLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "AdduserLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "CreateRoleLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateRoleLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "DeleteNewsletterLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteNewsletterLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "DeleteRoleLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteRoleLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "EditNewsletterLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "EditNewsletterLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetAllMembersLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAllMembersLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetAllNewslettersLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAllNewslettersLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetAllRolesLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAllRolesLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetAllUsersLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAllUsersLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetArticleLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetArticleLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetRoleLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetRoleLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetUserLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetUserLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "PostNewsletterLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "PostNewsletterLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "RateNewsletterLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "RateNewsletterLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "UpdateRoleLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateRoleLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "UpdateUserLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateUserLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "AddItemLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "AddItemLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "GetAllItemsLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAllItemsLambdaFunctionArnParameter"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApiParameter"
              },
              "/*/*"
            ]
          ]
        }
      },
      "DependsOn": []
    }
  },
  "Outputs": {}
}